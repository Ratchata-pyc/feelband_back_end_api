datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ตัวอย่าง schema ของคุณ
model User {
  id           Int        @id @default(autoincrement())
  firstName    String
  lastName     String
  email        String     @unique
  password     String
  profileImage String?
  isAdmin      Boolean    @default(false)
  isActive     Boolean    @default(true)
  isAvailable  Boolean    @default(false)
  createdAt    DateTime   @default(now()) @db.Timestamp(0)
  updatedAt    DateTime   @updatedAt @db.Timestamp(0)
  Musician     Musician[]
  Review       Review[]
  Report       Report[]
}

model Musician {
  id          Int     @id @default(autoincrement())
  userId      Int
  roleId      Int
  genreId     Int
  budget      String
  provinceId  Int
  districtId  Int
  contact     String
  description String?

  user     User          @relation(fields: [userId], references: [id])
  province province_list @relation(fields: [provinceId], references: [id])
  district district_list @relation(fields: [districtId], references: [id])
  role     role_list     @relation(fields: [roleId], references: [id])
  genre    genre_list    @relation(fields: [genreId], references: [id])
  Review   Review[]
  Report   Report[]
}

model province_list {
  id            Int             @id @default(autoincrement())
  province      String
  Musician      Musician[]
  district_list district_list[]
}

model district_list {
  id         Int           @id @default(autoincrement())
  provinceId Int
  district   String
  Musician   Musician[]
  province   province_list @relation(fields: [provinceId], references: [id])
}

model role_list {
  id       Int        @id @default(autoincrement())
  role     String
  Musician Musician[]
}

model genre_list {
  id       Int        @id @default(autoincrement())
  genre    String
  Musician Musician[]
}

model Review {
  id         Int      @id @default(autoincrement())
  userId     Int
  musicianId Int
  content    String
  createdAt  DateTime @default(now()) @db.Timestamp(0)
  updatedAt  DateTime @updatedAt @db.Timestamp(0)
  deletedAt  DateTime @updatedAt @db.Timestamp(0)

  user     User     @relation(fields: [userId], references: [id])
  musician Musician @relation(fields: [musicianId], references: [id])
}

model Report {
  id         Int      @id @default(autoincrement())
  userId     Int
  musicianId Int
  complaint  String
  createdAt  DateTime @default(now()) @db.Timestamp(0)

  user     User     @relation(fields: [userId], references: [id])
  musician Musician @relation(fields: [musicianId], references: [id])
}
